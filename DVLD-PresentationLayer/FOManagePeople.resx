<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PBManagePeople.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEk0lEQVR4Xt2aT6scRRTFa6UoGoib+OeruA8Y1JDgyg8g+G8jMZ8gkC8lutDnS5z+GwaD2WXvQo1g
        QHhyq6d74plzu09V17yB/KB4c889dbtq+jZT894LoTRPnrwa6u7r0HTnoe6exRFft1/F3BJr55+Utn0v
        1G0b6u7CGU30eKydf1LinZsW/zTU3e3w4+M342j6m6HqHk+bYHdy7fyTY207Ln67fQvToe+v7jZ2Ear+
        S0yvnn9y6u7BbgO3MTXR9J/sPD9javX8k1N3f8XFWct6nJ9fGe5g9yemVs8/OcOduUD5AM/n6Yjqu3TG
        O7jdvoGpCcvFDfR/YGr1/JMzfG5fhKq9jqkJyw138AxTq+cfFeVwYq+HxW3C2dlrWCJqljNP032O6az5
        yrpWox5OhsU0O+3XULW3wqNH1+Kw16YNuSpst6/gZZLnq+taRerhJC5q2gQbVajrd/EyE+r81HVlk3M4
        sbtT9V/E59Q+rmzU7U+xbS231LZL842cdWVR+nBSqm1Lr8ul5OGkZNuWXNcs451ZQvGVbFvleobqcyl5
        OCnZtiXXNUvJw0nJti25rllyDiceajsqvpLrmiX1cDJHybYtua5F1MPJEqXbttS6JJTDyRLHaNsS67o0
        LrVt19D0H4e6+2F3TMW2WhrPQt1/H6ruQywbWdO2dfdRrH2MdU3U7X0yOWf8Hu8sI6dtrZbVPLxO+qi6
        e1h+YLjzZnoeqv5b907MYQttujth076PqdVYTavtvbFz2F7q/m7cm+2xaW6gxVrM2t4+gu5iKptjPk45
        DG+C1f4OU/vP6c3mHUxlUe5xmmnbRB5u397VIyfN8WIlKPE4SW2bgbtPN5FBycdptm0zcPfpJjIo+TjN
        tm0G7j7dRAYlaxkl67m1WIJpDPRhvBash7EH8zHNTTCNgT6M14L1MPZgPqa5CaYx0IfxWrAexh7MxzQ3
        wTQG+jD2NAbzoYaxB/MxzU0wjYE+jD2NwXyoYezBfExzE0xjoA9jT2MwH2oYezAf09wE0xjow9jTGMyH
        GsYezMc0N8E0Bvow9jQG86GGsQfzMc1NMI2BPow9jcF8qGHswXxM2yWGLx3jLyXsp2sG0IexpzGYDzWM
        PUbf4Z7+QauZfxmS7Tdhs3k9/ky9kBd7GoP5UMPYY/Qd7ukBWkP8ujlNgLEE+jD2NAbzoYaxB+5jHE3/
        AVoHhjfB/oZn3+bGv+XpF9rH/8b4sPX0Wodz922bWuvFPbmbZ6ReaB//NmgHrafXOpy7b9vUWtmoBdBX
        tZ/tNwJjCfSP48U7l1orG1ZA1Zr+090/RPz9v/8KWWK/ab9tWS1VS4IVUDVE8RiKj3lULQlWQNUQxWMo
        PuZRtSRYAVVDmEfVEOZRtSRYAVVDmEfVEOZRtSRYAVVDmEfVEOZRtSRYAVVDmEfVEOZRtSRYAVVDmEfV
        EOZRtSRYAVVDmEfVEOZRtSRYAVVDmEfVEOZRtSRYAVVDmEfVEOZRtSRYAVVDmEfVEOZRtSRYAVVDmEfV
        EOZRtSRYAVVDmEfVEOZRtZPBFqNqLwVsY6r2UsA2pmpH5D+u20eUZ2vF+wAAAABJRU5ErkJggg==
</value>
  </data>
</root>