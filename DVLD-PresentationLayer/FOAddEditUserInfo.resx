<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAddNext.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAECklEQVRYR7XWS28aVxQH8Kv8qYMlB4lFJVfdVXJ2jdSP0UqJ6kWb5MNkkU0jRVnn4SSqus2mTWEA
        8xrAmBnGPMceG/Cr5mEbqJsoxpVxZJ/oMsE2A5gZJ/lLZwm/wz3nMsOY2Xj2HPi7eReu5nMIDQXuegPu
        3SMIvHYa8Gwr8NRm4K3dYa+b14wfv3yE5nW4/n0JV/MA7gbBXSe4dwkCrx2CZ5vgqRG8vKoEX4XgKx9g
        tvyC+StTxq8zn1eVcZtr7xFczfcWYIJvizDL6x+Cf/PIFth4yMRNu/HrL46rMXXF1Vj8BJjg3yAEeK0T
        gmsS8y1/Y2QG5qvXjR/gbjSGw1UT8HoXJgRXCcESIVSqjAULN4xeb1yNqY/L9TlhQqhICBcI4ZUKE7VJ
        I6tH3LRfce/mvhBMEJf1imoplkiMG3lmc+88GgWPB8r0R22fbmXr1uGIRogsESKLZIup93t1oXodnu33
        A+GPv9bu36K/6gfE0z4+oencrgEujoQRVfWK5fd7RgFP7eUwuHvU91b/6+Dd8CZu5WtWYUIsR5jLEuLZ
        x7rO/+G81YNhcPeoHeENir35v6+JabU6GI4OgTt4hhBPt1g8fo3BW757EXx+xo7I2uAmFitWYMJ8ijC/
        QIgrtxl8W89HwaeLFSqSI1qi2Bt9F06bODmh6aWtITBHDTCvhMLrGYN/U+mFOdoPn5+xI7ZCsbcDmtA2
        TcJJgiQTJEli8G80zcIQ+THrR+2IaxR72+pvYnndDEyQeSXqDIG1thX4/Iyd80uU2u8/iZ+00iiYkJwn
        JOOHDMHVtlW4O2NnQu1r4PD4hH7UiqNgQnKOoMwdMoSKTR0dBXP0bLmciTzJ7/pH8PNKyQxMUGIEJVpn
        EAvKhXAH7d1qp3QBbgZeiBIWIoRURGIIL8+YhflyOaXcYLxQtAITUiIhHX7KIC7fMQPzrXbK2SF4QUdH
        wmIXJqRDhFToF8ZEbQJRtTUYTp9eJ6ecIfndfj9eXOmFO+gIOB0kZIItpokT+sNoLv9iGNy9Sve2qj34
        4fEx3SysWIMzHZiQCRCyszOnT0MWzU5hLnM0CO5eJ7ucpD/39s5+eYnjl4H9HG8zNfjdWQP8hSSefjgI
        PtvqBNmTEv3eqNPNomYBDpyHCTkf2XLeBz14J6Joh6RIHdQA98+Y32HrcKfy3gRb9Vw18noUZRKSXP5C
        MCHvqbGc61sj25MxWb4BOVH5zDBBFcpjqvC90RucTOxrKPHo5WGOnsIE1Z1gmjDkdXxYVj1XbanYfSxE
        WjrMUctw25YXfhs+czNRxElkwo+RDrXOrtJIuAXV/Yyp7t6r9knRxAnkgreR8T9FdlZGzldHzttGnpen
        DlWQkReeYFH4lWmv9H84E/kAazPYial89TQAAAAASUVORK5CYII=
</value>
  </data>
</root>